{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "pseudo_kernel",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "shebang"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_content"
          }
        }
      ]
    },
    "shebang": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#!"
        },
        {
          "type": "STRING",
          "value": "/grammars/"
        },
        {
          "type": "SYMBOL",
          "name": "grammar_name"
        },
        {
          "type": "STRING",
          "value": "parse"
        }
      ]
    },
    "grammar_name": {
      "type": "PATTERN",
      "value": "[a-z][a-z0-9-]*"
    },
    "_content": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "markdown_header"
        },
        {
          "type": "SYMBOL",
          "name": "code_block"
        },
        {
          "type": "SYMBOL",
          "name": "math_block"
        },
        {
          "type": "SYMBOL",
          "name": "context_link"
        },
        {
          "type": "SYMBOL",
          "name": "paragraph"
        },
        {
          "type": "SYMBOL",
          "name": "pseudo_code_block"
        },
        {
          "type": "SYMBOL",
          "name": "newline"
        }
      ]
    },
    "markdown_header": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "##"
            },
            {
              "type": "STRING",
              "value": "#"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "[^\\n]+"
        }
      ]
    },
    "code_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "```"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "language_identifier"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "newline"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "code_line"
              },
              {
                "type": "SYMBOL",
                "name": "newline"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "```"
        }
      ]
    },
    "math_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "```latex"
        },
        {
          "type": "SYMBOL",
          "name": "newline"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "latex_line"
              },
              {
                "type": "SYMBOL",
                "name": "newline"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "```"
        }
      ]
    },
    "context_link": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "PATTERN",
          "value": "[^\\]]+"
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PATTERN",
              "value": "[^\\n]+"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "paragraph": {
      "type": "PATTERN",
      "value": "[^#\\-\\n`][^\\n]*"
    },
    "pseudo_code_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "```pseudo"
        },
        {
          "type": "SYMBOL",
          "name": "newline"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "pseudo_statement"
              },
              {
                "type": "SYMBOL",
                "name": "newline"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "```"
        }
      ]
    },
    "pseudo_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function_definition"
        },
        {
          "type": "SYMBOL",
          "name": "let_binding"
        },
        {
          "type": "SYMBOL",
          "name": "assignment"
        },
        {
          "type": "SYMBOL",
          "name": "if_statement"
        },
        {
          "type": "SYMBOL",
          "name": "system_function_call"
        },
        {
          "type": "SYMBOL",
          "name": "return_statement"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        },
        {
          "type": "SYMBOL",
          "name": "expression_statement"
        }
      ]
    },
    "function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "fn"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "parameter_list"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "->"
                },
                {
                  "type": "SYMBOL",
                  "name": "type_annotation"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "parameter"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "parameter"
              }
            ]
          }
        }
      ]
    },
    "parameter": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "type_annotation"
        }
      ]
    },
    "block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "pseudo_statement"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "let_binding": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "assignment": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "else"
                },
                {
                  "type": "SYMBOL",
                  "name": "block"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "pipe_chain": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "|>"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        }
      ]
    },
    "method_chain": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "method_call"
              }
            ]
          }
        }
      ]
    },
    "method_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "argument_list"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "system_function_call": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "spawn_subagent"
            },
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "argument_list"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "load_specs"
            },
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "argument_list"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "load_algorithm"
            },
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "argument_list"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "execute"
            },
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "argument_list"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "return_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "return"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "expression_statement": {
      "type": "SYMBOL",
      "name": "_expression"
    },
    "function_call": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "identifier"
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "argument_list"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "argument_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "object_literal"
        },
        {
          "type": "SYMBOL",
          "name": "array_literal"
        },
        {
          "type": "SYMBOL",
          "name": "range_expression"
        },
        {
          "type": "SYMBOL",
          "name": "function_call"
        },
        {
          "type": "SYMBOL",
          "name": "property_access"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "property_access": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "object_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "object_property"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "object_property"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "object_property": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "SYMBOL",
              "name": "string_literal"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "array_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_expression"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "_expression"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "range_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "STRING",
              "value": ".."
            },
            {
              "type": "SYMBOL",
              "name": "number"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "STRING",
              "value": ".."
            },
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "binary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "+"
                  },
                  {
                    "type": "STRING",
                    "value": "-"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "*"
                  },
                  {
                    "type": "STRING",
                    "value": "/"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 0,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "=="
                  },
                  {
                    "type": "STRING",
                    "value": "!="
                  },
                  {
                    "type": "STRING",
                    "value": ">"
                  },
                  {
                    "type": "STRING",
                    "value": "<"
                  },
                  {
                    "type": "STRING",
                    "value": ">="
                  },
                  {
                    "type": "STRING",
                    "value": "<="
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 0,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "&&"
                  },
                  {
                    "type": "STRING",
                    "value": "||"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        }
      ]
    },
    "type_annotation": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "string"
        },
        {
          "type": "STRING",
          "value": "number"
        },
        {
          "type": "STRING",
          "value": "boolean"
        },
        {
          "type": "STRING",
          "value": "any"
        },
        {
          "type": "STRING",
          "value": "SessionState"
        },
        {
          "type": "STRING",
          "value": "ProjectContext"
        },
        {
          "type": "STRING",
          "value": "Checkpoint"
        },
        {
          "type": "STRING",
          "value": "SessionUpdate"
        },
        {
          "type": "STRING",
          "value": "AuthRequest"
        },
        {
          "type": "STRING",
          "value": "VibeError"
        },
        {
          "type": "STRING",
          "value": "CodeNode"
        },
        {
          "type": "STRING",
          "value": "QueryResult"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "Result"
            },
            {
              "type": "STRING",
              "value": "<"
            },
            {
              "type": "SYMBOL",
              "name": "type_annotation"
            },
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "SYMBOL",
              "name": "type_annotation"
            },
            {
              "type": "STRING",
              "value": ">"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "Option"
            },
            {
              "type": "STRING",
              "value": "<"
            },
            {
              "type": "SYMBOL",
              "name": "type_annotation"
            },
            {
              "type": "STRING",
              "value": ">"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "Array"
            },
            {
              "type": "STRING",
              "value": "<"
            },
            {
              "type": "SYMBOL",
              "name": "type_annotation"
            },
            {
              "type": "STRING",
              "value": ">"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": "<"
            },
            {
              "type": "SYMBOL",
              "name": "type_list"
            },
            {
              "type": "STRING",
              "value": ">"
            }
          ]
        }
      ]
    },
    "type_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type_annotation"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "type_annotation"
              }
            ]
          }
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+(\\.\\d+)?"
    },
    "string_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "PATTERN",
                "value": "[^\"\\\\]|\\\\.*"
              }
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "'"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "PATTERN",
                "value": "[^'\\\\]|\\\\.*"
              }
            },
            {
              "type": "STRING",
              "value": "'"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\"\"\""
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "PATTERN",
                "value": "[^\"]"
              }
            },
            {
              "type": "STRING",
              "value": "\"\"\""
            }
          ]
        }
      ]
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "//"
        },
        {
          "type": "PATTERN",
          "value": "[^\\n]*"
        }
      ]
    },
    "language_identifier": {
      "type": "PATTERN",
      "value": "[a-z]+"
    },
    "code_line": {
      "type": "PATTERN",
      "value": "[^`\\n][^\\n]*"
    },
    "latex_line": {
      "type": "PATTERN",
      "value": "[^`\\n][^\\n]*"
    },
    "newline": {
      "type": "PATTERN",
      "value": "\\n"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}